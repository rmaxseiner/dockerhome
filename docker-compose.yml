version: "3"
services:

  homeassistant:
    container_name: home-assistant
    image: homeassistant/home-assistant:stable
    volumes:
      - ./homeassistant:/config
    devices:
      - /dev/ttyACM0:/dev/ttyACM0
    environment:
      - TZ=America/New_York
    restart: always
    network_mode: host
  influx:
    container_name: influx
    image: influxdb:1.8
#    ports:
#      - 8083:8083
#      - 8086:8086
#      - 9092:9092
    volumes:
      - influx_data:/var/lib/influxdb
      - ./influxdb.conf:/etc/influxdb/influxdb.conf
    environment:
      - TZ=America/New_York
    network_mode: host
  MQTT:
    container_name: MQTT
    image: eclipse-mosquitto:1.6.13
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mosquitto_logs:/mosquitto/log
      - mosquitto_data:/mosquitto/data
    environment:
      - TZ=America/New_York
    restart: always
    ports:
      - 1883:1883
      - 9001:9001
  zwavejs2mqtt:
    container_name: zwavejs2mqtt
    image: zwavejs/zwavejs2mqtt:latest
    restart: always
    tty: true
    stop_signal: SIGINT
    environment:
      - TZ=America/New_York
    devices:
      - /dev/serial/by-id/usb-0658_0200-if00:/dev/serial/by-id/usb-0658_0200-if00
    volumes:
      - zwavejsmqtt_data:/usr/src/app/store
    ports:
      - '8091:8091' # port for web interface
      - '3000:3000' # port for zwave-js websocket server

  grafana:
    container_name: graphana
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - TZ=America/New_York
    restart: always
    ports:
      - 3001:3000
  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 9000:9000
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
  node-red:
    container_name: node-red
    image: nodered/node-red
    restart: always
    ports:
      - 1880:1880
    volumes:
      - node_red_data:/data
  esphome:
    container_name: esphome
    image: esphome/esphome
    environment:
      - TZ=America/New_York
    restart: always
    network_mode: host
    volumes:
      - esphome_config:/config

  mongo:
    container_name: mongodb
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME:root
      - MONGO_INITDB_ROOT_PASSWORD:max4905home
#  telegraf:
#    image: telegraf
#    container_name: telegraf
#    restart: always
#    extra_hosts:
#     - "influxdb:192.168.86.29"
#    environment:
#      HOST_PROC: /rootfs/proc
#      HOST_SYS: /rootfs/sys
#      HOST_ETC: /rootfs/etc
#    volumes:
#     - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
#     - /var/run/docker.sock:/var/run/docker.sock:ro
#     - /sys:/rootfs/sys:ro
#     - /proc:/rootfs/proc:ro
#     - /etc:/rootfs/etc:ro
  zigbee2mqtt:
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./data:/app/data
      - /run/udev:/run/udev:ro
    restart: always
    logging:
      options:
        max-size: 1g
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
    environment:
      - TZ=America/New_York
    privileged: true
    image: koenkk/zigbee2mqtt
volumes:
  portainer_data:
  node_red_data:
  chronograf_data:
  grafana_data:
  influx_data:
  mosquitto_logs:
  mosquitto_data:
  esphome_config:
  zwavejsmqtt_data:
